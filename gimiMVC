#!/usr/bin/php
<?php
/**
 * gimiMVC executable script file.
 *
 * @author Z. Alem <info@alemcode.com>
 * @link http://alemcode.com
 * @copyright Copyright 2012, Z.Alem
 * @license http://opensource.org/licenses/bsd-license.php The BSD License
 */

/**
 * GimiMVC is a complimentary console tool for miniMVC.
 * It serves to aid in development within the miniMVC framework 
 * by providing scaffolding tools 
 * and simplified database access.
 * 
 * SCAFFOLDING
 *
 * 	 Scaffold templates are placed in minimvc/gimiMVC/templates/.
 * 	 Each template folder consists of a template file for each component to be scaffolded.
 * 	 	ex. template/theManager/model.php  generates a model scaffold
 *
 * 	 Each template file inherits its basic functionality and scheme by
 * 	 extension of the Template class.
 *
 * DATABASE ACCESS
 *
 * 	gimiMVC utilizes the QueryTool class, an extension of the QueryBuilder and Database minimvc/db/ classes,
 * 	to provide direct, simplified access to an application's database.
 *
 * 	Using the available commands, gimiMVC uses the QueryTool to create a direct query console 
 * 	communication-line to an application database, creation and deletion of tables,
 * 	and linking and unlinking of tables.
 *
 * @author Z. Alem <info@alemcode.com>
 * @package minimvc
 */


/**
 * ----------------------------------------------------------------------
 * Load Required Files
 * ----------------------------------------------------------------------
 */

define( 'GIMIMVC_ROOT', dirname(__FILE__) . '/' );

$required_files = array (
	'base/Load',
	'base/Config',
	'components/Adaptable',
	'database/Database',		
	'database/DbQuery', 	
	'database/querybuilder/IQueryBuilder', 	
	'database/querybuilder/QueryBuilder', 	
	'database/querybuilder/adapter/QBAdapter', 	
	'lib/File', 
	'log/Logger',
	'gimimvc/Config', 	
	'gimimvc/Processor', 
	'gimimvc/core/QueryTool', 
	'gimimvc/core/Scaffold',
	'util/ArrayUtil',
);

foreach ( $required_files as $file )
	require_once ( GIMIMVC_ROOT . 'minimvc/' . $file . '.php' );


/**
 * ----------------------------------------------------------------------
 * Define/Fetch Arguments
 * ----------------------------------------------------------------------
 */
$args = getopt( 

	'c:m:v:p:u:a:q:x::h',

	array(
		'useconfig:',	'app:',		'mvc:',	 	'table:', 
		'undotable:', 	'link:', 	'unlink:', 	'to:', 
		'user', 	'help', 	'sql:', 	'redo',	'undo',
		'scaffold:', 	'component:', 	'unit:', 	'generate',
		'readschema:', 'run::',
	) 
);


/**
 * ----------------------------------------------------------------------
 * Initiate Processor and process arguements
 * ----------------------------------------------------------------------
 */
$processor = new Processor( $args );
$processor -> process ();
?>
